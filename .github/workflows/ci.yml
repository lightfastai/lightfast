name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cancel previous runs on new pushes to the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Detect changes to only run CI when needed
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      lightfast-core: ${{ steps.changes.outputs.lightfast-core }}
      compiler: ${{ steps.changes.outputs.compiler }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            lightfast-core:
              - 'core/lightfast/**'
              - 'pnpm-lock.yaml'
              - '.github/workflows/ci.yml'
            compiler:
              - 'core/compiler/**'
              - 'pnpm-lock.yaml'
              - '.github/workflows/ci.yml'

  # Fast feedback: Lint first (quickest to fail)
  lint:
    name: Lint
    needs: changes
    if: needs.changes.outputs.lightfast-core == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint lightfast
        run: pnpm --filter lightfast lint || echo "‚ö†Ô∏è Linting issues found but not blocking CI"

  # Type checking (medium speed)
  typecheck:
    name: Type Check
    needs: changes
    if: needs.changes.outputs.lightfast-core == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check lightfast
        run: pnpm --filter lightfast typecheck || echo "‚ö†Ô∏è Type errors found but not blocking CI"

  # Test (simple test run on Node 22)
  test:
    name: Test
    needs: changes
    if: needs.changes.outputs.lightfast-core == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test lightfast
        run: pnpm --filter lightfast test


  # Build check (runs on Node 22)
  build:
    name: Build
    needs: changes
    if: needs.changes.outputs.lightfast-core == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build lightfast
        run: pnpm --filter lightfast build

      - name: Check build outputs
        run: |
          echo "üì¶ Build outputs:"
          ls -la core/lightfast/dist/
          echo "‚úÖ Build completed successfully"

  # Compiler: Lint check
  compiler-lint:
    name: Compiler Lint
    needs: changes
    if: needs.changes.outputs.compiler == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint compiler
        run: pnpm --filter @lightfastai/compiler lint

  # Compiler: Type check
  compiler-typecheck:
    name: Compiler Type Check
    needs: changes
    if: needs.changes.outputs.compiler == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check compiler
        run: pnpm --filter @lightfastai/compiler typecheck

  # Compiler: Test with coverage
  compiler-test:
    name: Compiler Test
    needs: changes
    if: needs.changes.outputs.compiler == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test compiler with coverage
        run: pnpm --filter @lightfastai/compiler test:coverage

      - name: Generate coverage report
        run: |
          echo "üìä Coverage Report:"
          pnpm --filter @lightfastai/compiler exec vitest run --coverage.reporter=text-summary

  # Compiler: Build check
  compiler-build:
    name: Compiler Build
    needs: changes
    if: needs.changes.outputs.compiler == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build compiler
        run: pnpm --filter @lightfastai/compiler build

      - name: Check build outputs
        run: |
          echo "üì¶ Compiler build outputs:"
          ls -la core/compiler/dist/
          echo "‚úÖ Compiler build completed successfully"

  # Summary job (required status check)
  ci-success:
    name: CI Success
    if: always() && (needs.changes.outputs.lightfast-core == 'true' || needs.changes.outputs.compiler == 'true')
    needs: [changes, lint, typecheck, test, build, compiler-lint, compiler-typecheck, compiler-test, compiler-build]
    runs-on: ubuntu-latest
    steps:
      - name: Check all jobs
        run: |
          # Check lightfast-core jobs
          LIGHTFAST_SUCCESS=true
          if [[ "${{ needs.changes.outputs.lightfast-core }}" == "true" ]]; then
            if [[ "${{ needs.lint.result }}" != "success" || \
                  "${{ needs.typecheck.result }}" != "success" || \
                  "${{ needs.test.result }}" != "success" || \
                  "${{ needs.build.result }}" != "success" ]]; then
              LIGHTFAST_SUCCESS=false
            fi
          fi
          
          # Check compiler jobs
          COMPILER_SUCCESS=true
          if [[ "${{ needs.changes.outputs.compiler }}" == "true" ]]; then
            if [[ "${{ needs.compiler-lint.result }}" != "success" || \
                  "${{ needs.compiler-typecheck.result }}" != "success" || \
                  "${{ needs.compiler-test.result }}" != "success" || \
                  "${{ needs.compiler-build.result }}" != "success" ]]; then
              COMPILER_SUCCESS=false
            fi
          fi
          
          if [[ "$LIGHTFAST_SUCCESS" == "true" && "$COMPILER_SUCCESS" == "true" ]]; then
            echo "‚úÖ All CI checks passed!"
          else
            echo "‚ùå Some CI checks failed"
            exit 1
          fi