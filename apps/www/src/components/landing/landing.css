:root {
  /* Single progress variable (0 to 1) set by JavaScript */
  --wheel-progress: 0;

  /* Grid line animation timing */
  --grid-line-duration: 1.6s;
  --grid-line-delay-step: 0.2s;
  --grid-line-easing: ease-out;

  /* Basic viewport variables (set by JavaScript) */
  --viewport-width: 100vw;
  --viewport-height: 100vh;
  --container-width: calc(100vw - 64px);
  --container-height: calc(100vh - 128px);

  /* Grid constants - responsive via CSS */
  --grid-size: 12;
  --grid-offset-x: 32px;
  --grid-offset-y: 64px;
  --center-start: 5;
  --center-size: 2;
  --card-gap: 12px;

  /* Center card border configuration */
  --cc-border-width: 1px;

  /* Calculated grid dimensions */
  --cell-width: calc(var(--container-width) / var(--grid-size));
  --cell-height: calc(var(--container-height) / var(--grid-size));

  /* Binary animation phases */
  --text-fade-phase: calc(1 - min(1, var(--wheel-progress) * 2));
  --early-access-card-phase: var(--wheel-progress);
  --early-access-text-phase: var(--wheel-progress);
  --logo-move-phase: var(--wheel-progress);

  /* Center card sizing - responsive with aspect ratios */
  /* Desktop: Square aspect ratio */
  --cc-start-width: min(
    900px,
    calc(min(var(--viewport-width), var(--viewport-height)) * 0.8)
  );
  --cc-start-height: var(--cc-start-width);
  --cc-early-access-width: min(
    600px,
    calc(min(var(--viewport-width), var(--viewport-height)) * 0.6)
  );
  --cc-early-access-height: var(--cc-early-access-width);

  /* Binary sizing: interpolate between start and early access */
  --cc-current-width: calc(
    var(--cc-start-width) +
      (var(--cc-early-access-width) - var(--cc-start-width)) *
      var(--early-access-card-phase)
  );
  --cc-current-height: calc(
    var(--cc-start-height) +
      (var(--cc-early-access-height) - var(--cc-start-height)) *
      var(--early-access-card-phase)
  );

  /* Center card positions - stays centered */
  --cc-current-x: calc(var(--viewport-width) / 2);
  --cc-current-y: calc(var(--viewport-height) / 2);

  /* Center card visual boundaries */
  --cc-visual-top: calc(
    var(--cc-current-y) - var(--cc-current-height) / 2 + var(--card-gap) / 2
  );
  --cc-visual-bottom: calc(
    var(--cc-current-y) + var(--cc-current-height) / 2 - var(--card-gap) / 2 -
      var(--cc-border-width) / 2
  );
  --cc-visual-left: calc(
    var(--cc-current-x) - var(--cc-current-width) / 2 + var(--card-gap) / 2
  );
  --cc-visual-right: calc(
    var(--cc-current-x) + var(--cc-current-width) / 2 - var(--card-gap) / 2 -
      var(--cc-border-width) / 2
  );

  /* Component opacity and scale */
  --grid-lines-opacity: 1;
  --integration-container-opacity: 0;
  --integration-card-opacity: 0;
  --integration-card-scale: 0.8;

  /* Animation timing for scroll lock */
  --loading-animation-duration: calc(
    var(--grid-line-duration) + var(--grid-line-delay-step) * 3 + 0.6s + 0.2s
  );
}

/* === RESPONSIVE BREAKPOINTS === */
@media (max-width: 640px) {
  :root {
    /* Mobile: Faster animations, smaller grid */
    --grid-line-duration: 0.8s;
    --grid-line-delay-step: 0.1s;
    --grid-size: 8;
    --grid-offset-x: 16px;
    --grid-offset-y: 32px;
    --card-gap: 8px;

    /* Mobile: Vertical aspect ratio (3:4) for better content layout */
    --cc-start-width: min(85vw, 350px);
    --cc-start-height: calc(var(--cc-start-width) * 1.33); /* 4:3 height */
    --cc-early-access-width: min(75vw, 300px);
    --cc-early-access-height: calc(
      var(--cc-early-access-width) * 1.5
    ); /* 5:4 height */
  }
}

@media (min-width: 641px) and (max-width: 1024px) {
  :root {
    /* Tablet: Medium settings */
    --grid-line-duration: 1.2s;
    --grid-line-delay-step: 0.15s;
    --grid-size: 10;
    --grid-offset-x: 24px;
    --grid-offset-y: 48px;
    --card-gap: 10px;

    /* Tablet: Slightly vertical aspect ratio (4:5) */
    --cc-start-width: min(70vmin, 750px);
    --cc-start-height: calc(var(--cc-start-width) * 1.1); /* 10:11 height */
    --cc-early-access-width: min(60vmin, 800px);
    --cc-early-access-height: calc(
      var(--cc-early-access-width) * 1.15
    ); /* Slightly taller */
  }
}

/* Reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  :root {
    --grid-line-duration: 0.3s;
    --grid-line-delay-step: 0.05s;
  }

  .center-card-text,
  .center-card-logo,
  .center-card-next-button {
    animation: none !important;
    opacity: 1 !important;
    transform: none !important;
  }
}

/* === CENTER CARD === */
.optimized-center-card {
  position: absolute;
  width: calc(var(--cc-current-width) - var(--card-gap));
  height: calc(var(--cc-current-height) - var(--card-gap));
  left: calc(
    var(--cc-current-x) - var(--cc-current-width) / 2 + var(--card-gap) / 2
  );
  top: calc(
    var(--cc-current-y) - var(--cc-current-height) / 2 + var(--card-gap) / 2
  );
  overflow: hidden;
  z-index: 20;

  /* Color transitions */
  --cc-bg-initial: white;
  --cc-bg-early-access: black;
  --cc-initial-weight: calc((1 - var(--early-access-card-phase)) * 100%);
  --cc-early-access-weight: calc(var(--early-access-card-phase) * 100%);

  /* Fallback background color for browsers without color-mix() support */
  background-color: var(--cc-bg-initial);
  /* Fallback text color for browsers without color-mix() support */
  color: black;

  /* Modern browsers with color-mix() support */
  @supports (background-color: color-mix(in srgb, white, black)) {
    background-color: color-mix(
      in srgb,
      var(--cc-bg-initial) var(--cc-initial-weight),
      var(--cc-bg-early-access) var(--cc-early-access-weight)
    );

    color: color-mix(
      in srgb,
      black var(--cc-initial-weight),
      white var(--cc-early-access-weight)
    );
  }

  will-change: transform, width, height, background-color, color;
  transition:
    width 0.1s ease-out,
    height 0.1s ease-out,
    left 0.1s ease-out,
    top 0.1s ease-out,
    background-color 0.1s ease-out,
    color 0.1s ease-out;
}

/* === TEXT AND LOGO ANIMATIONS === */
.center-card-text {
  opacity: 0;
  transform: translateY(20px);
  animation:
    fadeInUp 0.6s ease-out
      calc(var(--grid-line-duration) + var(--grid-line-delay-step)) forwards,
    textScrollControl 0.1s linear calc(var(--loading-animation-duration))
      forwards;
  will-change: opacity, transform;
  transition: opacity 0.15s ease-out;
}

.center-card-logo {
  /* The logo icon has dimensions of 28x16 */
  width: 56px; /* 28 * 2 scale */
  height: 32px; /* 16 * 2 scale */
  /* Position at bottom-left corner of padded area */
  left: 0; /* Align to left edge of padded area */
  top: calc(100% - 32px); /* Align to bottom edge of padded area */
  opacity: 0;
  animation:
    fadeIn 0.6s ease-out
      calc(var(--grid-line-duration) + var(--grid-line-delay-step) + 0.2s)
      forwards,
    logoScrollControl 0.1s linear calc(var(--loading-animation-duration))
      forwards;
  will-change: opacity;
  transition: opacity 0.3s ease-out;
}

/* === EARLY ACCESS CONTAINER === */
.center-card-early-access-container {
  opacity: var(--early-access-text-phase);
  transition: opacity 0.3s ease-out;
  will-change: opacity;
  pointer-events: none;
  z-index: 10;
}

.center-card-early-access-container[data-visible="true"] {
  pointer-events: auto;
  z-index: 30;
}

/* === BUTTONS === */
.center-card-next-button {
  opacity: 0;
  transform: translateY(20px) scale(0.8);
  animation:
    fadeInScale 0.6s ease-out
      calc(var(--grid-line-duration) + var(--grid-line-delay-step) + 0.2s)
      forwards,
    buttonLogoSync 0.1s linear calc(var(--loading-animation-duration)) forwards;
  will-change: opacity, transform;
  transition:
    opacity 0.15s ease-out,
    transform 0.15s ease-out;
  pointer-events: none;
  z-index: 20;
}

.center-card-next-button[data-visible="true"] {
  pointer-events: auto;
}

/* === FORMS === */
.early-access-form {
  opacity: var(--early-access-text-phase);
  transition: opacity 0.3s ease-out;
  will-change: opacity;
  pointer-events: none;
}

.center-card-early-access-container[data-visible="true"] .early-access-form {
  pointer-events: auto;
}

.early-access-form * {
  pointer-events: inherit;
}

/* === SCROLL INDICATOR === */
.scroll-indicator-floating {
  opacity: 0;
  animation: fadeIn 0.5s ease-out
    calc(var(--grid-line-duration) + var(--grid-line-delay-step) + 0.2s)
    forwards;
  transition: opacity 0.3s ease-out;
  will-change: opacity;
}

/* === GRID LINES === */
.optimized-grid-lines {
  opacity: var(--grid-lines-opacity);
  transition: opacity 0.2s ease-out;
  will-change: opacity;
  z-index: 10;
}

.grid-line-top {
  position: absolute;
  height: 1px;
  top: calc(var(--cc-visual-top) - 1px);
  left: 0;
  width: 100vw;
  transform-origin: right center;
  transform: scaleX(0);
  animation: drawFromRight var(--grid-line-duration) var(--grid-line-easing)
    forwards;
  transition: top 0.1s ease-out;
  will-change: top;
}

.grid-line-bottom {
  position: absolute;
  height: 1px;
  top: calc(var(--cc-visual-bottom) + 0.5px);
  left: 0;
  width: 100vw;
  transform-origin: left center;
  transform: scaleX(0);
  animation: drawFromLeft var(--grid-line-duration) var(--grid-line-easing)
    var(--grid-line-delay-step) forwards;
  transition: top 0.1s ease-out;
  will-change: top;
}

.grid-line-left {
  position: absolute;
  width: 1px;
  left: calc(var(--cc-visual-left) - 1px);
  top: 0;
  height: 100vh;
  transform-origin: center top;
  transform: scaleY(0);
  animation: drawFromTop var(--grid-line-duration) var(--grid-line-easing)
    calc(var(--grid-line-delay-step) * 2) forwards;
  transition: left 0.1s ease-out;
  will-change: left;
}

.grid-line-right {
  position: absolute;
  width: 1px;
  left: calc(var(--cc-visual-right) + 0.5px);
  top: 0;
  height: 100vh;
  transform-origin: center bottom;
  transform: scaleY(0);
  animation: drawFromBottom var(--grid-line-duration) var(--grid-line-easing)
    calc(var(--grid-line-delay-step) * 3) forwards;
  transition: left 0.1s ease-out;
  will-change: left;
}

/* Additional grid lines */
.grid-line-h33,
.grid-line-h66,
.grid-line-v33,
.grid-line-v66 {
  position: absolute;
  opacity: 0;
  animation: fadeIn 0.4s ease-out
    calc(var(--grid-line-duration) + var(--grid-line-delay-step) * 3 + 0.2s)
    forwards;
  will-change: opacity;
}

.grid-line-h33 {
  height: 1px;
  top: calc(
    var(--cc-visual-top) + (var(--cc-visual-bottom) - var(--cc-visual-top)) *
      0.33
  );
  left: 0;
  width: 100vw;
  transition: top 0.1s ease-out;
}

.grid-line-h66 {
  height: 1px;
  top: calc(
    var(--cc-visual-top) + (var(--cc-visual-bottom) - var(--cc-visual-top)) *
      0.66
  );
  left: 0;
  width: 100vw;
  transition: top 0.1s ease-out;
  animation-delay: calc(
    var(--grid-line-duration) + var(--grid-line-delay-step) * 3 + 0.4s
  );
}

.grid-line-v33 {
  width: 1px;
  left: calc(
    var(--cc-visual-left) + (var(--cc-visual-right) - var(--cc-visual-left)) *
      0.33
  );
  top: 0;
  height: 100vh;
  transition: left 0.1s ease-out;
  animation-delay: calc(
    var(--grid-line-duration) + var(--grid-line-delay-step) * 3 + 0.6s
  );
}

.grid-line-v66 {
  width: 1px;
  left: calc(
    var(--cc-visual-left) + (var(--cc-visual-right) - var(--cc-visual-left)) *
      0.66
  );
  top: 0;
  height: 100vh;
  transition: left 0.1s ease-out;
  animation-delay: calc(
    var(--grid-line-duration) + var(--grid-line-delay-step) * 3 + 0.8s
  );
}

/* === SCROLL LOCK === */
.landing-scroll-locked {
  overflow: hidden;
  touch-action: none;
  -webkit-overflow-scrolling: touch;
}

.landing-scroll-locked body {
  overflow: hidden;
  position: fixed;
  width: 100%;
  height: 100%;
}

/* === MOBILE OPTIMIZATIONS === */
@media (max-width: 640px) {
  /* Touch-friendly targets */
  .center-card-next-button,

  /* Simplified animations */
  .center-card-text {
    animation-duration: 0.4s;
  }
}

/* Landscape mobile optimizations */
@media (max-width: 767px) and (orientation: landscape) {
  :root {
    /* Even more vertical on landscape phones for better content fit */
    --cc-start-width: min(50vw, 280px);
    --cc-start-height: calc(var(--cc-start-width) * 1.5); /* 2:3 height */
    --cc-early-access-width: min(45vw, 250px);
    --cc-early-access-height: calc(var(--cc-early-access-width) * 1.4);
  }
}

/* Touch device optimizations - input font size handled by component */

/* === KEYFRAMES === */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes textScrollControl {
  from {
    opacity: var(--text-fade-phase);
  }
  to {
    opacity: var(--text-fade-phase);
  }
}

@keyframes buttonLogoSync {
  from {
    opacity: var(--text-fade-phase);
  }
  to {
    opacity: var(--text-fade-phase);
  }
}

@keyframes logoScrollControl {
  from {
    opacity: var(--text-fade-phase);
  }
  to {
    opacity: var(--text-fade-phase);
  }
}

@keyframes drawFromRight {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

@keyframes drawFromLeft {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

@keyframes drawFromTop {
  from {
    transform: scaleY(0);
  }
  to {
    transform: scaleY(1);
  }
}

@keyframes drawFromBottom {
  from {
    transform: scaleY(0);
  }
  to {
    transform: scaleY(1);
  }
}
