:root {
  /* Single progress variable (0 to 1) set by JavaScript */
  --wheel-progress: 0;

  /* Grid line animation timing */
  /* IMPORTANT: Keep these values in sync with ANIMATION_TIMING in constants.ts */
  --grid-line-duration: 1.6s;
  --grid-line-delay-step: 0.2s;
  --grid-line-easing: ease-out;

  /* Viewport variables (set by JavaScript) */
  --viewport-width: 100vw;
  --viewport-height: 100vh;
  --container-width: calc(100vw - 64px);
  --container-height: calc(100vh - 128px);

  /* Grid constants */
  --grid-size: 12;
  --grid-offset-x: 32px;
  --grid-offset-y: 64px;
  --center-start: 5;
  --center-size: 2;
  --card-gap: 12px;

  /* Center card border configuration */
  --cc-border-width: 1px;

  /* Calculated grid dimensions */
  --cell-width: calc(var(--container-width) / var(--grid-size));
  --cell-height: calc(var(--container-height) / var(--grid-size));

  /* Full viewport grid dimensions for edge-to-edge positioning */
  --full-cell-width: calc(100vw / var(--grid-size));
  --full-cell-height: calc(100vh / var(--grid-size));

  /* Binary animation phases - simplified for version 1 */
  /* Initial state: progress = 0, Early access state: progress = 1 */

  /* Text fade: inverse of progress (fades out as we scroll to early access) */
  --text-fade-phase: calc(1 - var(--wheel-progress));

  /* Early access phases: both use direct progress value */
  --early-access-card-phase: var(--wheel-progress);
  --early-access-text-phase: var(--wheel-progress);

  /* Logo moves during the transition */
  --logo-move-phase: var(--wheel-progress);

  /* Disabled phases for version 1 */
  --expansion-phase: 0;
  --category-phase: 0;

  /* Center card sizing - simplified for binary states */
  --cc-start-size: min(
    900px,
    calc(min(var(--viewport-width), var(--viewport-height)) * 0.8)
  );
  --cc-early-access-size: min(
    600px,
    calc(min(var(--viewport-width), var(--viewport-height)) * 0.6)
  );

  /* Binary sizing: interpolate between start and early access */
  --cc-current-size: calc(
    var(--cc-start-size) +
      (var(--cc-early-access-size) - var(--cc-start-size)) *
      var(--early-access-card-phase)
  );

  /* Center card positions - stays centered for version 1 */
  --cc-current-x: calc(var(--viewport-width) / 2);
  --cc-current-y: calc(var(--viewport-height) / 2);

  /* Center card visual boundaries (including border) */
  --cc-visual-top: calc(
    var(--cc-current-y) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  --cc-visual-bottom: calc(
    var(--cc-current-y) + var(--cc-current-size) / 2 - var(--card-gap) / 2 -
      var(--cc-border-width) / 2
  );
  --cc-visual-left: calc(
    var(--cc-current-x) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  --cc-visual-right: calc(
    var(--cc-current-x) + var(--cc-current-size) / 2 - var(--card-gap) / 2 -
      var(--cc-border-width) / 2
  );

  /* Component opacity and scale - grid lines enabled for version 1 */
  --grid-lines-opacity: 1;
  --integration-container-opacity: 0;
  --integration-card-opacity: 0;
  --integration-card-scale: 0.8;

  /* Text and logo animation - simplified */
  --text-opacity: var(--text-fade-phase);
  --logo-move-factor: var(--logo-move-phase);

  /* Animation timing for scroll lock */
  /* NOTE: This calculation matches ANIMATION_TIMING.LOADING_DURATION in constants.ts */
  --loading-animation-duration: calc(
    var(--grid-line-duration) + var(--grid-line-delay-step) * 3 + 0.6s + 0.2s
  ); /* Grid lines + text delay + text duration + buffer */
}

/* PERFORMANCE OPTIMIZED: Transform-based center card animation */
.optimized-center-card {
  /* Use transforms for GPU acceleration instead of layout properties */
  position: absolute;
  width: calc(var(--cc-current-size) - var(--card-gap));
  height: calc(var(--cc-current-size) - var(--card-gap));
  left: calc(
    var(--cc-current-x) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  top: calc(
    var(--cc-current-y) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );

  /* Performance optimizations */
  will-change: transform, width, height;
  contain: layout style paint;

  /* Smooth transitions for spring animations */
  transition:
    width 0.1s ease-out,
    height 0.1s ease-out,
    left 0.1s ease-out,
    top 0.1s ease-out;
}

/* Center card text - simplified for binary scroll system */
.center-card-text {
  /* Let binary scroll system control opacity directly */
  opacity: var(--text-opacity);
  transform: translateY(20px);

  /* Only run the initial fadeInUp animation */
  animation: fadeInUp 0.6s ease-out
    calc(var(--grid-line-duration) + var(--grid-line-delay-step)) forwards;

  will-change: opacity, transform;
  transition: opacity 0.2s ease-out;
}

/* Center card logo with loading animation */
.center-card-logo {
  width: 48px;
  height: 48px;

  /* Actual card size after gap adjustments */
  --actual-card-size: calc(var(--cc-current-size) - var(--card-gap));

  /* Start position - center of card */
  left: calc((var(--actual-card-size) - 48px) / 2);
  top: calc((var(--actual-card-size) - 48px) / 2);

  /* Loading animation - starts with grid lines, moves to bottom-left */
  opacity: 1;
  animation: logoMoveToCorner var(--grid-line-duration) var(--grid-line-easing)
    forwards;

  /* Performance optimizations */
  will-change: left, top, opacity;
  transition: none;
}

/* Early Access Chat Container */
.center-card-early-access-container {
  opacity: var(--early-access-text-phase);
  transform: scale(calc(0.9 + var(--early-access-text-phase) * 0.1));
  transition:
    opacity 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94),
    transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  will-change: opacity, transform;
  pointer-events: none;
}

/* Enable interactions when visible */
.center-card-early-access-container[data-visible="true"] {
  pointer-events: auto;
}

/* Early Access Text Animations - CSS driven */
.early-access-text {
  opacity: 0;
  transform: translateY(15px);
  filter: blur(6px);
  transition:
    opacity 1.2s cubic-bezier(0.16, 1, 0.3, 1),
    transform 1.2s cubic-bezier(0.16, 1, 0.3, 1),
    filter 1.2s cubic-bezier(0.16, 1, 0.3, 1);
}

/* Simplified staggered text animations for binary system */
.early-access-text[data-index="0"] {
  opacity: calc(min(1, max(0, (var(--early-access-text-phase) - 0.1) * 2)));
  transform: translateY(
    calc(
      15px * (1 - min(1, max(0, (var(--early-access-text-phase) - 0.1) * 2)))
    )
  );
  filter: blur(
    calc(6px * (1 - min(1, max(0, (var(--early-access-text-phase) - 0.1) * 2))))
  );
  transition-delay: 0.1s;
}

.early-access-text[data-index="1"] {
  opacity: calc(min(1, max(0, (var(--early-access-text-phase) - 0.2) * 2)));
  transform: translateY(
    calc(
      15px * (1 - min(1, max(0, (var(--early-access-text-phase) - 0.2) * 2)))
    )
  );
  filter: blur(
    calc(6px * (1 - min(1, max(0, (var(--early-access-text-phase) - 0.2) * 2))))
  );
  transition-delay: 0.2s;
}

.early-access-text[data-index="2"] {
  opacity: calc(min(1, max(0, (var(--early-access-text-phase) - 0.3) * 2)));
  transform: translateY(
    calc(
      15px * (1 - min(1, max(0, (var(--early-access-text-phase) - 0.3) * 2)))
    )
  );
  filter: blur(
    calc(6px * (1 - min(1, max(0, (var(--early-access-text-phase) - 0.3) * 2))))
  );
  transition-delay: 0.3s;
}

.early-access-text[data-index="3"] {
  opacity: calc(min(1, max(0, (var(--early-access-text-phase) - 0.4) * 2)));
  transform: translateY(
    calc(
      15px * (1 - min(1, max(0, (var(--early-access-text-phase) - 0.4) * 2)))
    )
  );
  filter: blur(
    calc(6px * (1 - min(1, max(0, (var(--early-access-text-phase) - 0.4) * 2))))
  );
  transition-delay: 0.4s;
}

/* Early Access Form - appears after text animations */
.early-access-form {
  opacity: var(--early-access-text-phase);
  transform: translateY(calc(25px * (1 - var(--early-access-text-phase))));
  transition:
    opacity 1s cubic-bezier(0.16, 1, 0.3, 1),
    transform 1s cubic-bezier(0.16, 1, 0.3, 1);
  transition-delay: 0.9s;
}

/* PERFORMANCE OPTIMIZED: Grid lines with instant response */
.optimized-grid-lines {
  opacity: var(--grid-lines-opacity);
  transition: opacity 0.2s ease-out;
  will-change: opacity;
  z-index: 10; /* Ensure grid lines appear above center card during animation */
}

/* Grid line elements - aligned with center card visual boundaries */
.grid-line-top {
  position: absolute;
  height: 1px;
  top: var(--cc-visual-top);
  left: 0;
  width: 100vw;
  transform-origin: right center;
  transform: scaleX(0);
  animation: drawFromRight var(--grid-line-duration) var(--grid-line-easing)
    forwards;
  transition: top 0.1s ease-out;
  will-change: top;
}

.grid-line-bottom {
  position: absolute;
  height: 1px;
  top: var(--cc-visual-bottom);
  left: 0;
  width: 100vw;
  transform-origin: left center;
  transform: scaleX(0);
  animation: drawFromLeft var(--grid-line-duration) var(--grid-line-easing)
    var(--grid-line-delay-step) forwards;
  transition: top 0.1s ease-out;
  will-change: top;
}

.grid-line-left {
  position: absolute;
  width: 1px;
  left: var(--cc-visual-left);
  top: 0;
  height: 100vh;
  transform-origin: center top;
  transform: scaleY(0);
  animation: drawFromTop var(--grid-line-duration) var(--grid-line-easing)
    calc(var(--grid-line-delay-step) * 2) forwards;
  transition: left 0.1s ease-out;
  will-change: left;
}

.grid-line-right {
  position: absolute;
  width: 1px;
  left: var(--cc-visual-right);
  top: 0;
  height: 100vh;
  transform-origin: center bottom;
  transform: scaleY(0);
  animation: drawFromBottom var(--grid-line-duration) var(--grid-line-easing)
    calc(var(--grid-line-delay-step) * 3) forwards;
  transition: left 0.1s ease-out;
  will-change: left;
}

/* PERFORMANCE OPTIMIZED: Integration categories with instant response */
.optimized-integration-container {
  position: absolute;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  opacity: var(--integration-container-opacity);
  transition: opacity 0.2s ease-out;
  will-change: opacity;
}

/* Optimized integration cards */
.optimized-integration-card {
  position: absolute;
  opacity: var(--integration-card-opacity);
  transform: scale(var(--integration-card-scale));
  transition:
    opacity 0.2s ease-out,
    transform 0.2s ease-out;
  transition-delay: calc(var(--index) * 50ms);
  will-change: opacity, transform;
}

/* Base positioning for all integration cards using CSS custom properties */
.integration-card {
  position: absolute;

  /* Default positioning - works for most cards with gaps */
  left: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-start) +
      var(--card-gap) / 2
  );
  top: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
      var(--card-gap) / 2
  );
  width: calc(var(--cell-width) * var(--col-span) - var(--card-gap));
  height: calc(var(--cell-height) * var(--row-span) - var(--card-gap));
}

/* Edge-to-edge positioning using data attributes */

/* 3D Modeling - Left edge, top portion */
.integration-card[data-category="3d-modeling"] {
  left: var(--card-gap);
  top: var(--card-gap);
  width: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
  height: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
}

/* Audio Production - Left edge, bottom portion */
.integration-card[data-category="audio-production"] {
  left: var(--card-gap);
  top: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
      var(--card-gap) / 2
  );
  width: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
  height: calc(
    100vh -
      (
        var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
          var(--card-gap) / 2
      ) -
      var(--card-gap)
  );
}

/* Design Tools - Right edge, top portion */
.integration-card[data-category="design-tools"] {
  left: calc(
    100vw - var(--grid-offset-x) - var(--cell-width) * var(--col-span) +
      var(--card-gap) / 2
  );
  top: var(--card-gap);
  width: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
  height: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
}

/* Interactive & Live - Right edge, bottom portion */
.integration-card[data-category="interactive--live"] {
  left: calc(
    100vw - var(--grid-offset-x) - var(--cell-width) * var(--col-span) +
      var(--card-gap) / 2
  );
  top: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
      var(--card-gap) / 2
  );
  width: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
  height: calc(
    100vh -
      (
        var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
          var(--card-gap) / 2
      ) -
      var(--card-gap)
  );
}

/* Center card wrapping - preserves exact behavior */
.integration-card[data-category="2d-graphics"] {
  /* 2D Graphics: colStart=2, rowStart=0, colSpan=5, rowSpan=5 - wraps around center card */
  left: calc(
    var(--grid-offset-x) + var(--cell-width) * 2 + var(--card-gap) / 2
  );
  top: var(--card-gap);
  width: calc(
    var(--cc-current-x) + var(--cc-current-size) / 2 - var(--grid-offset-x) -
      var(--cell-width) * 2 - var(--card-gap)
  );
  height: calc(
    var(--cc-current-y) - var(--cc-current-size) / 2 - var(--card-gap) -
      var(--card-gap) / 2
  );
}

.integration-card[data-category="game-engines"] {
  /* Game Engines: top starts at center card top border, width ends at center card left border */
  left: calc(
    var(--grid-offset-x) + var(--cell-width) * 2 + var(--card-gap) / 2
  );
  top: calc(
    var(--cc-current-y) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  width: calc(
    var(--cc-current-x) - var(--cc-current-size) / 2 - var(--grid-offset-x) -
      var(--cell-width) * 2 - var(--card-gap)
  );
  height: calc(
    100vh -
      (var(--cc-current-y) - var(--cc-current-size) / 2 + var(--card-gap) / 2) -
      var(--card-gap)
  );
}

.integration-card[data-category="video--vfx"] {
  /* Video & VFX: starts exactly at center card right border, ends where Design Tools begins */
  left: calc(
    var(--cc-current-x) + var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  top: var(--card-gap);
  width: calc(
    100vw - var(--grid-offset-x) - var(--cell-width) * 2 -
      (var(--cc-current-x) + var(--cc-current-size) / 2) - var(--card-gap)
  );
  height: calc(
    var(--cc-current-y) + var(--cc-current-size) / 2 - var(--card-gap) -
      var(--card-gap) / 2
  );
}

.integration-card[data-category="3d-texturing--cad"] {
  /* 3D Texturing & CAD: starts exactly at center card left border, ends where Interactive & Live begins */
  left: calc(
    var(--cc-current-x) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  top: calc(
    var(--cc-current-y) + var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  width: calc(
    100vw - var(--grid-offset-x) - var(--cell-width) * 2 -
      (var(--cc-current-x) - var(--cc-current-size) / 2) - var(--card-gap)
  );
  height: calc(
    100vh -
      (var(--cc-current-y) + var(--cc-current-size) / 2 + var(--card-gap) / 2) -
      var(--card-gap)
  );
}

/* PERFORMANCE OPTIMIZED: Page header with instant response */
.optimized-page-header {
  position: absolute;
  top: 64px;
  left: 0;
  right: 0;
  text-align: center;
  opacity: var(--category-phase);
  transition: opacity 0.2s ease-out;
  will-change: opacity;
}

/* Scroll lock during loading animations */
.landing-scroll-locked {
  overflow: hidden;
  touch-action: none;
  -webkit-overflow-scrolling: touch;
}

.landing-scroll-locked body {
  overflow: hidden;
  position: fixed;
  width: 100%;
  height: 100%;
}

/* ===== KEYFRAMES FOR COMPONENTS ===== */
@keyframes rotate3d {
  from {
    transform: rotateX(0deg) rotateY(0deg);
  }
  to {
    transform: rotateX(360deg) rotateY(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Grid line drawing animations */
@keyframes drawFromRight {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

@keyframes drawFromLeft {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

@keyframes drawFromTop {
  from {
    transform: scaleY(0);
  }
  to {
    transform: scaleY(1);
  }
}

@keyframes drawFromBottom {
  from {
    transform: scaleY(0);
  }
  to {
    transform: scaleY(1);
  }
}

/* Center card content animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Logo movement animation - starts big, scales down fast, then moves */
@keyframes logoMoveToCorner {
  0% {
    left: calc((var(--actual-card-size) - 48px) / 2);
    top: calc((var(--actual-card-size) - 48px) / 2);
    transform: scale(4);
  }
  20% {
    left: calc((var(--actual-card-size) - 48px) / 2);
    top: calc((var(--actual-card-size) - 48px) / 2);
    transform: scale(1);
  }
  100% {
    left: 32px;
    top: calc(var(--actual-card-size) - 32px - 48px);
    transform: scale(1);
  }
}

/* Text scroll control animation - switches opacity to scroll variables */
@keyframes textScrollControl {
  from {
    opacity: var(--text-opacity);
  }
  to {
    opacity: var(--text-opacity);
  }
}
