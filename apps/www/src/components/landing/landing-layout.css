:root {
  /* Single progress variable (0 to 1) set by JavaScript */
  --wheel-progress: 0;

  /* Viewport variables (set by JavaScript) */
  --viewport-width: 100vw;
  --viewport-height: 100vh;
  --container-width: calc(100vw - 64px);
  --container-height: calc(100vh - 128px);

  /* Grid constants */
  --grid-size: 12;
  --grid-offset-x: 32px;
  --grid-offset-y: 64px;
  --center-start: 5;
  --center-size: 2;
  --card-gap: 12px;

  /* Calculated grid dimensions */
  --cell-width: calc(var(--container-width) / var(--grid-size));
  --cell-height: calc(var(--container-height) / var(--grid-size));

  /* Full viewport grid dimensions for edge-to-edge positioning */
  --full-cell-width: calc(100vw / var(--grid-size));
  --full-cell-height: calc(100vh / var(--grid-size));

  /* Animation phases calculated purely in CSS */
  --text-fade-phase: min(calc(var(--wheel-progress) / 0.3), 1);
  --logo-move-phase: min(max(0, calc((var(--wheel-progress) - 0.1) / 0.4)), 1);
  --expansion-phase: min(max(0, calc((var(--wheel-progress) - 0.2) / 0.6)), 1);
  --category-phase: min(max(0, calc((var(--wheel-progress) - 0.5) / 0.5)), 1);

  /* Center card sizing */
  --cc-start-size: min(
    600px,
    calc(min(var(--viewport-width), var(--viewport-height)) * 0.6)
  );
  --cc-final-size: calc(
    (min(var(--cell-width), var(--cell-height)) * var(--center-size)) -
      var(--card-gap)
  );
  --cc-current-size: calc(
    var(--cc-start-size) + (var(--cc-final-size) - var(--cc-start-size)) *
      var(--expansion-phase)
  );

  /* Center card positions */
  --cc-start-x: calc(var(--viewport-width) / 2);
  --cc-start-y: calc(var(--viewport-height) / 2);
  --cc-final-x: calc(
    var(--grid-offset-x) + (var(--center-start) + var(--center-size) / 2) *
      var(--cell-width) + var(--card-gap) / 2
  );
  --cc-final-y: calc(
    var(--grid-offset-y) + (var(--center-start) + var(--center-size) / 2) *
      var(--cell-height) + var(--card-gap) / 2
  );
  --cc-current-x: calc(
    var(--cc-start-x) + (var(--cc-final-x) - var(--cc-start-x)) *
      var(--expansion-phase)
  );
  --cc-current-y: calc(
    var(--cc-start-y) + (var(--cc-final-y) - var(--cc-start-y)) *
      var(--expansion-phase)
  );

  /* Component opacity and scale */
  --grid-lines-opacity: calc(1 - var(--expansion-phase) * 0.8);
  --integration-container-opacity: calc(
    max(0, min(1, (var(--expansion-phase) - 0.3) / 0.1)) * var(--category-phase)
  );
  --integration-card-opacity: var(--category-phase);
  --integration-card-scale: calc(0.8 + var(--category-phase) * 0.2);

  /* Text and logo animation */
  --text-opacity: calc(1 - var(--text-fade-phase));
  --logo-move-factor: var(--logo-move-phase);
}

/* PERFORMANCE OPTIMIZED: Transform-based center card animation */
.optimized-center-card {
  /* Use transforms for GPU acceleration instead of layout properties */
  position: absolute;
  width: calc(var(--cc-current-size) - var(--card-gap));
  height: calc(var(--cc-current-size) - var(--card-gap));
  left: calc(
    var(--cc-current-x) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  top: calc(
    var(--cc-current-y) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );

  /* Performance optimizations */
  will-change: transform, width, height;
  contain: layout style paint;

  /* Instant transitions - no more delays */
  transition: none;
}

/* Center card text with pure CSS opacity animation */
.center-card-text {
  opacity: var(--text-opacity);
  transition: opacity 0.2s ease-out;
  will-change: opacity;
}

/* Center card logo with pure CSS transform animation */
.center-card-logo {
  width: 48px;
  height: 48px;

  /* Actual card size after gap adjustments */
  --actual-card-size: calc(var(--cc-current-size) - var(--card-gap));

  /* Logo position interpolation using actual card size */
  --logo-start-x: 32px;
  --logo-start-y: calc(var(--actual-card-size) - 32px - 48px);
  --logo-final-x: calc((var(--actual-card-size) - 48px) / 2);
  --logo-final-y: calc((var(--actual-card-size) - 48px) / 2);

  --logo-current-x: calc(
    var(--logo-start-x) + (var(--logo-final-x) - var(--logo-start-x)) *
      var(--logo-move-factor)
  );
  --logo-current-y: calc(
    var(--logo-start-y) + (var(--logo-final-y) - var(--logo-start-y)) *
      var(--logo-move-factor)
  );

  left: var(--logo-current-x);
  top: var(--logo-current-y);

  /* Performance optimizations */
  will-change: left, top;
  transition: none;
}

/* PERFORMANCE OPTIMIZED: Grid lines with instant response */
.optimized-grid-lines {
  opacity: var(--grid-lines-opacity);
  transition: opacity 0.2s ease-out;
  will-change: opacity;
}

/* Grid line elements - simplified full lines that intersect the center card */
.grid-line-top {
  position: absolute;
  height: 1px;
  top: calc(
    var(--cc-current-y, 50vh) - var(--cc-current-size, 600px) / 2 +
      var(--card-gap, 12px) / 2
  );
  left: 0;
  width: 100vw;
}

.grid-line-bottom {
  position: absolute;
  height: 1px;
  top: calc(
    var(--cc-current-y, 50vh) + var(--cc-current-size, 600px) / 2 -
      var(--card-gap, 12px) / 2
  );
  left: 0;
  width: 100vw;
}

.grid-line-left {
  position: absolute;
  width: 1px;
  left: calc(
    var(--cc-current-x, 50vw) - var(--cc-current-size, 600px) / 2 +
      var(--card-gap, 12px) / 2
  );
  top: 0;
  height: 100vh;
}

.grid-line-right {
  position: absolute;
  width: 1px;
  left: calc(
    var(--cc-current-x, 50vw) + var(--cc-current-size, 600px) / 2 -
      var(--card-gap, 12px) / 2
  );
  top: 0;
  height: 100vh;
}

/* PERFORMANCE OPTIMIZED: Integration categories with instant response */
.optimized-integration-container {
  position: absolute;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  opacity: var(--integration-container-opacity);
  transition: opacity 0.2s ease-out;
  will-change: opacity;
}

/* Optimized integration cards */
.optimized-integration-card {
  position: absolute;
  opacity: var(--integration-card-opacity);
  transform: scale(var(--integration-card-scale));
  transition:
    opacity 0.2s ease-out,
    transform 0.2s ease-out;
  transition-delay: calc(var(--index) * 50ms);
  will-change: opacity, transform;
}

/* Base positioning for all integration cards using CSS custom properties */
.integration-card {
  position: absolute;

  /* Default positioning - works for most cards with gaps */
  left: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-start) +
      var(--card-gap) / 2
  );
  top: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
      var(--card-gap) / 2
  );
  width: calc(var(--cell-width) * var(--col-span) - var(--card-gap));
  height: calc(var(--cell-height) * var(--row-span) - var(--card-gap));
}

/* Edge-to-edge positioning using data attributes */

/* 3D Modeling - Left edge, top portion */
.integration-card[data-category="3d-modeling"] {
  left: var(--card-gap);
  top: var(--card-gap);
  width: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
  height: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
}

/* Audio Production - Left edge, bottom portion */
.integration-card[data-category="audio-production"] {
  left: var(--card-gap);
  top: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
      var(--card-gap) / 2
  );
  width: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
  height: calc(
    100vh -
      (
        var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
          var(--card-gap) / 2
      ) -
      var(--card-gap)
  );
}

/* Design Tools - Right edge, top portion */
.integration-card[data-category="design-tools"] {
  left: calc(
    100vw - var(--grid-offset-x) - var(--cell-width) * var(--col-span) +
      var(--card-gap) / 2
  );
  top: var(--card-gap);
  width: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
  height: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
}

/* Interactive & Live - Right edge, bottom portion */
.integration-card[data-category="interactive--live"] {
  left: calc(
    100vw - var(--grid-offset-x) - var(--cell-width) * var(--col-span) +
      var(--card-gap) / 2
  );
  top: calc(
    var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
      var(--card-gap) / 2
  );
  width: calc(
    var(--grid-offset-x) + var(--cell-width) * var(--col-span) -
      var(--card-gap) - var(--card-gap) / 2
  );
  height: calc(
    100vh -
      (
        var(--grid-offset-y) + var(--cell-height) * var(--row-start) +
          var(--card-gap) / 2
      ) -
      var(--card-gap)
  );
}

/* Center card wrapping - preserves exact behavior */
.integration-card[data-category="2d-graphics"] {
  /* 2D Graphics: colStart=2, rowStart=0, colSpan=5, rowSpan=5 - wraps around center card */
  left: calc(
    var(--grid-offset-x) + var(--cell-width) * 2 + var(--card-gap) / 2
  );
  top: var(--card-gap);
  width: calc(
    var(--cc-current-x) + var(--cc-current-size) / 2 - var(--grid-offset-x) -
      var(--cell-width) * 2 - var(--card-gap)
  );
  height: calc(
    var(--cc-current-y) - var(--cc-current-size) / 2 - var(--card-gap) -
      var(--card-gap) / 2
  );
}

.integration-card[data-category="game-engines"] {
  /* Game Engines: top starts at center card top border, width ends at center card left border */
  left: calc(
    var(--grid-offset-x) + var(--cell-width) * 2 + var(--card-gap) / 2
  );
  top: calc(
    var(--cc-current-y) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  width: calc(
    var(--cc-current-x) - var(--cc-current-size) / 2 - var(--grid-offset-x) -
      var(--cell-width) * 2 - var(--card-gap)
  );
  height: calc(
    100vh -
      (var(--cc-current-y) - var(--cc-current-size) / 2 + var(--card-gap) / 2) -
      var(--card-gap)
  );
}

.integration-card[data-category="video--vfx"] {
  /* Video & VFX: starts exactly at center card right border, ends where Design Tools begins */
  left: calc(
    var(--cc-current-x) + var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  top: var(--card-gap);
  width: calc(
    100vw - var(--grid-offset-x) - var(--cell-width) * 2 -
      (var(--cc-current-x) + var(--cc-current-size) / 2) - var(--card-gap)
  );
  height: calc(
    var(--cc-current-y) + var(--cc-current-size) / 2 - var(--card-gap) -
      var(--card-gap) / 2
  );
}

.integration-card[data-category="3d-texturing--cad"] {
  /* 3D Texturing & CAD: starts exactly at center card left border, ends where Interactive & Live begins */
  left: calc(
    var(--cc-current-x) - var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  top: calc(
    var(--cc-current-y) + var(--cc-current-size) / 2 + var(--card-gap) / 2
  );
  width: calc(
    100vw - var(--grid-offset-x) - var(--cell-width) * 2 -
      (var(--cc-current-x) - var(--cc-current-size) / 2) - var(--card-gap)
  );
  height: calc(
    100vh -
      (var(--cc-current-y) + var(--cc-current-size) / 2 + var(--card-gap) / 2) -
      var(--card-gap)
  );
}

/* PERFORMANCE OPTIMIZED: Page header with instant response */
.optimized-page-header {
  position: absolute;
  top: 64px;
  left: 0;
  right: 0;
  text-align: center;
  opacity: var(--category-phase);
  transition: opacity 0.2s ease-out;
  will-change: opacity;
}

/* ===== KEYFRAMES FOR COMPONENTS ===== */
@keyframes rotate3d {
  from {
    transform: rotateX(0deg) rotateY(0deg);
  }
  to {
    transform: rotateX(360deg) rotateY(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
