---
description:
globs:
alwaysApply: false
---
- Always reference @convex-rules.mdc for core Convex development patterns and function guidelines
- Use three-tier deployment architecture: Local (localhost:3000 + 127.0.0.1:3210) → Preview (branch-based) → Production (stable)
- Configure Vercel build command as `npx convex deploy --cmd 'pnpm build'` for production deployments
- Add `--preview-run 'setupInitialData'` to preview deployments for fresh test data
- Set up separate CONVEX_DEPLOY_KEY environment variables in Vercel with proper scope isolation (Production vs Preview)
- Always sync local environment variables from .env.local to Convex using automated sync script
- Use branch-based preview deployments with auto-generated Convex backends (14-day cleanup)
- Validate all environment variables using @t3-oss/env-nextjs with client/server separation
- Follow deployment workflow: Local Development → Feature Branch → Preview → Merge to Main → Production

## Vercel Configuration
```bash
# Production Build Command
npx convex deploy --cmd 'pnpm build'

# Preview Build Command (with test data)
npx convex deploy --cmd 'pnpm build' --preview-run 'setupInitialData'

# Environment Variables
CONVEX_DEPLOY_KEY (Production scope: production deploy key)
CONVEX_DEPLOY_KEY (Preview scope: preview deploy key)
```

## Package.json Scripts Enhancement
```json
{
  "scripts": {
    "setup": "pnpm install && pnpm env:sync",
    "dev:all": "concurrently \"pnpm dev\" \"pnpm convex:dev\"",
    "env:sync": "./scripts/sync-env.sh",
    "env:check": "npx convex env list",
    "deploy:preview": "git push origin HEAD",
    "deploy:prod": "git checkout main && git merge - && git push origin main"
  }
}
```

## Environment Management
```typescript
// src/env.ts - Type-safe environment validation
export const env = createEnv({
  client: {
    NEXT_PUBLIC_CONVEX_URL: z.string().url(),
    NEXT_PUBLIC_APP_ENV: z.enum(["development", "preview", "production"]),
  },
  // ...rest of configuration
})

// Environment helpers for deployment-specific logic
export const isDevelopment = env.NEXT_PUBLIC_APP_ENV === "development"
export const isPreview = env.NEXT_PUBLIC_APP_ENV === "preview"
export const isProduction = env.NEXT_PUBLIC_APP_ENV === "production"
```

## Automated Environment Sync
```bash
# scripts/sync-env.sh - Sync .env.local to Convex
REQUIRED_VARS=("OPENAI_API_KEY")
OPTIONAL_VARS=("ANTHROPIC_API_KEY")

sync_var() {
    npx convex env set "$1" "${!1}" > /dev/null 2>&1
    echo "✅ Synced $1"
}
```

@convex-rules.mdc
