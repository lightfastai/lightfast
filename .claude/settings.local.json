{
  "permissions": {
    "allow": [
      "WebFetch(domain:vercel.com)",
      "Bash(pnpm add:*)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(git add:*)",
      "Bash(sed:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(pnpm biome check:*)",
      "Bash(pnpm tsx:*)",
      "Bash(pnpm with-env:*)",
      "Bash(grep:*)",
      "Bash(pnpm lint:*)",
      "WebFetch(domain:mastra.ai)",
      "mcp__mastra-docs__mastraDocs",
      "mcp__mastra-docs__mastraExamples",
      "Bash(pnpm test:sandbox:mock:*)",
      "Bash(git commit:*)",
      "mcp__playwright-mastra__browser_navigate",
      "Bash(npx playwright:*)",
      "mcp__playwright-mastra__browser_snapshot",
      "mcp__playwright-mastra__browser_click",
      "mcp__playwright-mastra__browser_take_screenshot",
      "mcp__playwright-mastra__browser_close",
      "Bash(curl:*)",
      "Bash(npm install:*)",
      "mcp__playwright-mastra__browser_press_key",
      "mcp__playwright-mastra__browser_type",
      "mcp__playwright-mastra__browser_wait_for",
      "WebFetch(domain:github.com)",
      "Bash(find:*)",
      "mcp__container-use__environment_file_write",
      "mcp__container-use__environment_run_cmd",
      "mcp__container-use__environment_config",
      "mcp__container-use__environment_create",
      "Bash(container-use config:*)",
      "Bash(container-use delete:*)",
      "mcp__container-use__environment_open",
      "mcp__container-use__environment_file_list",
      "mcp__playwright-mastra__browser_console_messages",
      "WebFetch(domain:ai-sdk.dev)",
      "WebFetch(domain:v5.ai-sdk.dev)",
      "mcp__container-use__environment_file_read",
      "Bash(cp:*)",
      "Bash(pnpm dlx:*)",
      "WebFetch(domain:nextjs.org)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "Bash(pnpm update:*)",
      "mcp__playwright-mastra__browser_network_requests",
      "mcp__playwright-mastra__browser_evaluate",
      "WebFetch(domain:v5.sdk.vercel.ai)",
      "WebFetch(domain:sdk.vercel.ai)",
      "Bash(pkill:*)",
      "Bash(git clone:*)",
      "Bash(git mv:*)",
      "Bash(node:*)",
      "Bash(npx ts-node:*)",
      "Bash(source .env)",
      "WebFetch(domain:www.braintrust.dev)",
      "Bash(npx braintrust eval:*)",
      "Bash(git push:*)",
      "Bash(pnpm eval:a011:simple:dev:*)",
      "mcp__container-use__environment_add_service",
      "Bash(git checkout:*)",
      "Bash(pnpm remove:*)",
      "Bash(pnpm dev:*)",
      "Bash(# Create a script to run all 10 tests in parallel\ncat > /tmp/test_a011_parallel.sh << ''EOF''\n#!/bin/bash\n\n# Function to run a test and save output\nrun_test() {\n    local test_num=$1\n    local prompt=$2\n    local thread_id=\"\"test-thread-${test_num}-$(date +%s)\"\"\n    \n    echo \"\"Starting Test ${test_num}: ${prompt:0:50}...\"\" >&2\n    \n    curl -s -X POST http://localhost:4111/api/agents/a011/stream \\\n        -H \"\"Content-Type: application/json\"\" \\\n        -d \"\"{\n            \\\"\"messages\\\"\": [{\\\"\"role\\\"\": \\\"\"user\\\"\", \\\"\"content\\\"\": \\\"\"${prompt}\\\"\"}],\n            \\\"\"threadId\\\"\": \\\"\"${thread_id}\\\"\",\n            \\\"\"resourceId\\\"\": \\\"\"a011\\\"\",\n            \\\"\"stream\\\"\": true\n        }\"\" > \"\"/tmp/test_${test_num}_output.txt\"\" 2>&1\n    \n    echo \"\"Test ${test_num} completed\"\" >&2\n}\n\n# Define all test prompts\nprompts=(\n    \"\"Create a Python script to calculate Fibonacci numbers and save it to fib.py\"\"\n    \"\"Search for latest AI news and summarize in a file called ai_news_summary.md\"\"\n    \"\"Visit github.com and extract trending repositories into a JSON file\"\"\n    \"\"Create a todo list app in JavaScript with HTML and CSS files\"\"\n    \"\"Clone the repository https://github.com/vercel/next.js and analyze its structure\"\"\n    \"\"Write a markdown file with 10 programming tips for beginners\"\"\n    \"\"Search for React best practices and create a comprehensive guide\"\"\n    \"\"Create multiple files for a simple web project with index.html, style.css, and script.js\"\"\n    \"\"Extract data from https://news.ycombinator.com and save the top stories as JSON\"\"\n    \"\"Build a simple calculator script in Python with basic operations\"\"\n)\n\n# Run all tests in parallel\nfor i in {0..9}; do\n    run_test $((i+1)) \"\"${prompts[$i]}\"\" &\ndone\n\n# Wait for all tests to complete\nwait\n\necho \"\"All tests completed!\"\"\nEOF\n\nchmod +x /tmp/test_a011_parallel.sh)",
      "WebFetch(domain:dev.to)",
      "WebFetch(domain:upstash.com)",
      "Bash(pnpm install:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "playwright-mastra",
    "mastra-docs"
  ]
}