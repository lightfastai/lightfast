{
  "permissions": {
    "allow": [
      "Bash(pnpm add:*)",
      "Bash(find:*)",
      "Bash(pnpm --filter @lightfast/www build)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(mkdir:*)",
      "Bash(pkill:*)",
      "Bash(pnpm build:*)",
      "Bash(git config:*)",
      "WebFetch(domain:vercel.com)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run:*)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(sed:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(pnpm biome check:*)",
      "Bash(pnpm tsx:*)",
      "Bash(pnpm with-env:*)",
      "Bash(grep:*)",
      "Bash(pnpm lint:*)",
      "WebFetch(domain:mastra.ai)",
      "mcp__mastra-docs__mastraDocs",
      "mcp__mastra-docs__mastraExamples",
      "Bash(pnpm test:sandbox:mock:*)",
      "mcp__playwright-mastra__browser_navigate",
      "Bash(npx playwright:*)",
      "mcp__playwright-mastra__browser_snapshot",
      "mcp__playwright-mastra__browser_click",
      "mcp__playwright-mastra__browser_take_screenshot",
      "mcp__playwright-mastra__browser_close",
      "Bash(curl:*)",
      "Bash(npm install:*)",
      "mcp__playwright-mastra__browser_press_key",
      "mcp__playwright-mastra__browser_type",
      "mcp__playwright-mastra__browser_wait_for",
      "WebFetch(domain:github.com)",
      "mcp__container-use__environment_file_write",
      "mcp__container-use__environment_run_cmd",
      "mcp__container-use__environment_config",
      "mcp__container-use__environment_create",
      "Bash(container-use config:*)",
      "Bash(container-use delete:*)",
      "mcp__container-use__environment_open",
      "mcp__container-use__environment_file_list",
      "mcp__playwright-mastra__browser_console_messages",
      "WebFetch(domain:ai-sdk.dev)",
      "WebFetch(domain:v5.ai-sdk.dev)",
      "mcp__container-use__environment_file_read",
      "Bash(cp:*)",
      "Bash(pnpm dlx:*)",
      "WebFetch(domain:nextjs.org)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "Bash(pnpm update:*)",
      "mcp__playwright-mastra__browser_network_requests",
      "mcp__playwright-mastra__browser_evaluate",
      "WebFetch(domain:v5.sdk.vercel.ai)",
      "WebFetch(domain:sdk.vercel.ai)",
      "Bash(git clone:*)",
      "Bash(git mv:*)",
      "Bash(node:*)",
      "Bash(npx ts-node:*)",
      "Bash(source .env)",
      "WebFetch(domain:www.braintrust.dev)",
      "Bash(npx braintrust eval:*)",
      "Bash(pnpm eval:a011:simple:dev:*)",
      "mcp__container-use__environment_add_service",
      "Bash(git checkout:*)",
      "Bash(pnpm remove:*)",
      "Bash(pnpm dev:*)",
      "WebFetch(domain:dev.to)",
      "WebFetch(domain:upstash.com)",
      "Bash(pnpm install:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_navigate",
      "WebFetch(domain:docs.upstash.com)",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_evaluate",
      "Bash(pnpm clean:workspaces:*)",
      "Bash(npm view:*)",
      "Bash(npm view:*)",
      "Bash(pnpm list:*)",
      "mcp__playwright__browser_close",
      "Bash(pnpm --filter @lightfast/www typecheck)",
      "WebFetch(domain:clerk.com)",
      "Bash(pnpm --filter @vendor/db build)",
      "WebFetch(domain:clerk.com)",
      "Bash(pnpm --filter @lightfast/auth build)",
      "Bash(true)",
      "Bash(pnpm --filter @repo/ui typecheck)",
      "Bash(pnpm --filter @lightfast/auth lint)",
      "Bash(pnpm --filter experimental build)",
      "WebFetch(domain:docs.browserbase.com)",
      "Bash(git diff:*)",
      "Bash(pnpm --filter @repo/url-utils build)",
      "Bash(pnpm --filter @lightfast/playground build)",
      "Bash(gh pr create:*)",
      "Bash(npx convex import:*)",
      "Bash(npx convex run:*)",
      "Bash(./scripts/run-usage-migration.sh:*)",
      "Bash(chmod:*)",
      "WebFetch(domain:docs.convex.dev)",
      "Bash(npx convex deploy:*)",
      "Bash(SKIP_ENV_VALIDATION=true pnpm build:www)",
      "Bash(SKIP_ENV_VALIDATION=true pnpm build)",
      "Bash(cat:*)",
      "WebFetch(domain:fumadocs.vercel.app)",
      "WebFetch(domain:fumadocs.dev)",
      "Bash(pnpm --filter @lightfast/docs typecheck)",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_take_screenshot",
      "Bash(pnpm --filter @lightfast/cloud typecheck)",
      "Bash(pnpm --filter @lightfast/chat build)",
      "Bash(npx tsc:*)",
      "Bash(pnpm tsc:*)",
      "Bash(pnpm --filter @vendor/trpc build)",
      "Bash(pnpm --filter @lightfast/chat typecheck)",
      "WebSearch",
      "Bash(pnpm test:*)",
      "Bash(pnpm --filter @lightfastai/core test)",
      "Bash(pnpm --filter @lightfastai/core typecheck)",
      "Bash(pnpm:*)",
      "Bash(DEBUG=1 node ../../core/cli/dist/index.js compile)",
      "Bash(npm pack:*)",
      "Bash(npx eslint:*)",
      "Bash(USE_TEST_AGENTS=true pnpm start)",
      "Read(/tmp/create-t3-turbo/apps/nextjs/src/trpc/**)",
      "Read(/tmp/create-t3-turbo/apps/nextjs/src/trpc/**)",
      "Read(/tmp/create-t3-turbo/packages/api/src/router/**)",
      "Read(/tmp/create-t3-turbo/**)",
      "Read(/tmp/create-t3-turbo/**)",
      "Bash(gh:*)",
      "Bash(git read-tree:*)",
      "Read(/private/tmp/create-t3-turbo/**)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "playwright"
  ],
  "outputStyle": "default"
}